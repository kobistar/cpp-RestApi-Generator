cmake_minimum_required(VERSION 3.2)

project(poco_client)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)

if (MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
else ()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -Wno-unused-variable")
endif ()

{{#contentCompression}}
find_package(ZLIB REQUIRED){{/contentCompression}}

find_package(Poco REQUIRED Foundation Net NetSSL JSON)

add_library(${PROJECT_NAME}
{{#models}}
{{#model}}
    {{classname}}.cpp
{{/model}}
{{/models}}
{{#apiInfo}}
{{#apis}}
{{#operations}}
    {{classname}}.cpp
{{/operations}}
{{/apis}}
{{/apiInfo}}
    {{prefix}}Helpers.cpp
    {{prefix}}HttpRequest.cpp
    {{prefix}}HttpFileElement.cpp
)
target_link_libraries(${PROJECT_NAME} PRIVATE Poco::Foundation Poco::JSON Poco::Net{{#contentCompression}} ${ZLIB_LIBRARIES}{{/contentCompression}})



if(NOT APPLE)
  find_package(OpenSSL REQUIRED)
  target_link_libraries(${PROJECT_NAME} PRIVATE ssl crypto)
endif()

set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_EXTENSIONS OFF)

install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
